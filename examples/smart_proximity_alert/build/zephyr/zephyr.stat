ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x7705
  Start of program headers:          52 (bytes into file)
  Start of section headers:          1246664 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         7
  Size of section headers:           40 (bytes)
  Number of section headers:         36
  Section header string table index: 35

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000120 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 000220 00d520 00  AX  0   0  4
  [ 3] .ARM.exidx        ARM_EXIDX       0000d620 00d740 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        0000d628 00d748 000060 00   A  0   0  4
  [ 5] device_area       PROGBITS        0000d688 00d7a8 0000a0 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        0000d728 00d848 000180 00  WA  0   0  4
  [ 7] gpio_driver_[...] PROGBITS        0000d8a8 00d9c8 000024 00   A  0   0  4
  [ 8] spi_driver_a[...] PROGBITS        0000d8cc 00d9ec 000008 00   A  0   0  4
  [ 9] clock_contro[...] PROGBITS        0000d8d4 00d9f4 00001c 00   A  0   0  4
  [10] uart_driver_[...] PROGBITS        0000d8f0 00da10 00000c 00   A  0   0  4
  [11] log_const_area    PROGBITS        0000d8fc 00da1c 000048 00   A  0   0  4
  [12] log_backend_area  PROGBITS        0000d944 00da64 000020 00   A  0   0  4
  [13] tbss              NOBITS          0000d964 00da84 000004 00 WAT  0   0  4
  [14] rodata            PROGBITS        0000d970 00da90 000e90 00   A  0   0 16
  [15] _RTT_SECTION_NAME NOBITS          20000000 00ea80 0020b8 00  WA  0   0 16
  [16] .ramfunc          NOBITS          200020b8 00e920 000008 00  WA  0   0  1
  [17] datas             PROGBITS        200020c0 00e920 000146 00  WA  0   0  4
  [18] device_states     PROGBITS        20002206 00ea66 00000a 00  WA  0   0  1
  [19] log_msg_ptr_area  PROGBITS        20002210 00ea70 000004 00  WA  0   0  4
  [20] .comment          PROGBITS        00000000 00ea78 000020 01  MS  0   0  1
  [21] .debug_aranges    PROGBITS        00000000 00ea98 002348 00      0   0  8
  [22] .debug_info       PROGBITS        00000000 010de0 06f0ae 00      0   0  1
  [23] .debug_abbrev     PROGBITS        00000000 07fe8e 0104bc 00      0   0  1
  [24] .debug_line       PROGBITS        00000000 09034a 0300a7 00      0   0  1
  [25] .debug_frame      PROGBITS        00000000 0c03f4 006224 00      0   0  4
  [26] .debug_str        PROGBITS        00000000 0c6618 013ea9 01  MS  0   0  1
  [27] .debug_loc        PROGBITS        00000000 0da4c1 03aa64 00      0   0  1
  [28] .debug_ranges     PROGBITS        00000000 114f28 007c68 00      0   0  8
  [29] .ARM.attributes   ARM_ATTRIBUTES  00000000 11cb90 000032 00      0   0  1
  [30] .last_section     PROGBITS        0000e95c 00ea74 000004 00   A  0   0  1
  [31] bss               NOBITS          20002218 00ea80 0005c9 00  WA  0   0  8
  [32] noinit            NOBITS          20002800 00ea80 001a00 00  WA  0   0 64
  [33] .symtab           SYMTAB          00000000 11cbc4 00ad60 10     34 1628  4
  [34] .strtab           STRTAB          00000000 127924 008aed 00      0   0  1
  [35] .shstrtab         STRTAB          00000000 130411 0001b4 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x00d740 0x0000d620 0x0000d620 0x00008 0x00008 R   0x4
  LOAD           0x000120 0x00000000 0x00000000 0x0e800 0x0e800 RWE 0x10
  LOAD           0x000000 0x200020b8 0x0000e800 0x00000 0x00008 RW  0x1
  LOAD           0x00e920 0x200020c0 0x0000e808 0x00154 0x00154 RW  0x4
  LOAD           0x00ea74 0x0000e95c 0x0000e95c 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x04200 RW  0x40
  TLS            0x00da84 0x0000d964 0x0000d964 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table gpio_driver_api_area spi_driver_api_area clock_control_driver_api_area uart_driver_api_area log_const_area log_backend_area rodata 
   02     .ramfunc 
   03     datas device_states log_msg_ptr_area 
   04     .last_section 
   05     _RTT_SECTION_NAME .ramfunc bss noinit 
   06     tbss 
